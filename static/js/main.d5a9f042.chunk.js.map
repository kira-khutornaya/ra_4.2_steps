{"version":3,"sources":["StepsManager.constants.js","functions/validateFields.js","components/StepsForm.js","components/StepsListItem.js","components/StepsList.js","components/StepsTable.js","components/StepsManager.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_FORM_STATE","date","distance","edit","validateFields","Number","test","alert","StepsForm","form","onSubmit","onChange","className","htmlFor","id","type","name","placeholder","value","StepsListItem","item","onEdit","onDelete","toLocaleDateString","toFixed","onClick","StepsList","data","map","defaultProps","StepsTable","stepsData","sortData","sort","a","b","getTime","StepsManager","useState","setForm","setData","editId","setEditId","e","preventDefault","dateArr","split","formatDate","Date","dateEl","find","el","updatedData","prev","shortid","generate","target","result","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5a9f042.chunk.js","sourcesContent":["const INITIAL_FORM_STATE = {\n  date: '',\n  distance: '',\n  edit: false,\n};\n\nexport default INITIAL_FORM_STATE;\n","const validateFields = (date, distance) => {\n  if (!date || !distance) {\n    alert('Поля \"Дата\" и \"Пройдено км\" обязательны для заполнения');\n    return false;\n  }\n\n  if (!Number(distance)) {\n    alert('Значение поля \"Пройдено км\" должно быть числом');\n    return false;\n  }\n\n  const result = /^[0-3]?[0-9][.][0-3]?[0-9][.][0-9]{4}$/.test(date);\n  if (!result) {\n    alert('Ошибка форматирования! Введите дату в формате ДД.ММ.ГГГГ');\n    return false;\n  }\n\n  return true;\n};\n\nexport default validateFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction StepsForm({ form, onSubmit, onChange }) {\n  return (\n    <div className=\"StepsForm-control\">\n      <form\n        className=\"StepsForm\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"StepsForm__group\">\n          <label htmlFor=\"date\">Дата</label>\n          <input\n            className=\"StepsForm__field\"\n            id=\"date\"\n            type=\"text\"\n            name=\"date\"\n            placeholder=\"ДД.ММ.ГГ\"\n            value={form.date}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"StepsForm__group\">\n          <label htmlFor=\"distance\">Пройдено км</label>\n          <input\n            className=\"StepsForm__field\"\n            id=\"distance\"\n            type=\"text\"\n            name=\"distance\"\n            placeholder=\"0\"\n            value={form.distance}\n            onChange={onChange}\n          />\n        </div>\n\n        <button className=\"StepsForm__button button\" type=\"submit\">Сохранить</button>\n      </form>\n    </div>\n  );\n}\n\nStepsForm.propTypes = {\n  form: PropTypes.exact({\n    date: PropTypes.string,\n    distance: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    edit: PropTypes.bool,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default StepsForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction StepsListItem({ item, onEdit, onDelete }) {\n  const { id, date, distance } = item;\n\n  return (\n    <>\n      <div className=\"StepsListItem__date\">{date.toLocaleDateString()}</div>\n      <div className=\"StepsListItem__distance\">{+distance.toFixed(1)}</div>\n      <div className=\"StepsListItem__control\">\n        <button\n          className=\"StepsListItem__editing button\"\n          type=\"button\"\n          onClick={() => onEdit(id)}\n        >\n          ✎\n        </button>\n        <button\n          className=\"StepsListItem__removing button\"\n          type=\"button\"\n          onClick={() => onDelete(id)}\n        >\n          ✘\n        </button>\n      </div>\n    </>\n  );\n}\n\nStepsListItem.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    distance: PropTypes.number,\n    edit: PropTypes.bool,\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default StepsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StepsListItem from './StepsListItem';\n\nfunction StepsList({ data, onEdit, onDelete }) {\n  return (\n    <ul className=\"StepsList\">\n      {\n        data.map((item) => (\n          <li className=\"StepsList__item\" key={item.id}>\n            <StepsListItem\n              item={item}\n              onEdit={onEdit}\n              onDelete={onDelete}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  );\n}\n\nStepsList.defaultProps = {\n  data: [],\n};\n\nStepsList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default StepsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StepsList from './StepsList';\n\nfunction StepsTable({ stepsData, onEdit, onDelete }) {\n  const sortData = [...stepsData];\n  sortData.sort((a, b) => b.date.getTime() - a.date.getTime());\n\n  return (\n    <div className=\"StepsTable\">\n      <div className=\"StepsTable__header\">\n        <span>Дата</span>\n        <span>Пройдено км</span>\n        <span>Действия</span>\n      </div>\n\n      <StepsList\n        data={sortData}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    </div>\n  );\n}\n\nStepsTable.defaultProps = {\n  stepsData: [],\n};\n\nStepsTable.propTypes = {\n  stepsData: PropTypes.arrayOf(PropTypes.object),\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default StepsTable;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport INITIAL_FORM_STATE from '../StepsManager.constants';\nimport validateFields from '../functions/validateFields';\nimport StepsForm from './StepsForm';\nimport StepsTable from './StepsTable';\n\nfunction StepsManager() {\n  const [form, setForm] = useState(INITIAL_FORM_STATE);\n  const [stepsData, setData] = useState([]);\n  const [editId, setEditId] = useState(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { date, distance, edit } = form;\n    if (!validateFields(date, distance)) return;\n\n    const dateArr = date.split('.');\n    const formatDate = new Date(dateArr[2], dateArr[1] - 1, dateArr[0]);\n    const dateEl = stepsData.find((el) => el.date.getTime() === formatDate.getTime());\n\n    if (!dateEl && !edit) {\n      setData((prev) => [...prev, {\n        id: shortid.generate(),\n        date: formatDate,\n        distance: Number(distance),\n        edit: false,\n      }]);\n    } else if (!dateEl && edit) {\n      const updatedData = stepsData.map((el) => (\n        el.id === editId ? {\n          ...el,\n          date: formatDate,\n          distance: Number(distance),\n        } : el\n      ));\n\n      setData(updatedData);\n    } else if (dateEl && !edit) {\n      const updatedData = stepsData.map((el) => (\n        el.id === dateEl.id ? {\n          ...el, distance: dateEl.distance + Number(distance),\n        } : el\n      ));\n\n      setData(updatedData);\n    } else {\n      const updatedData = stepsData.map((el) => (\n        el.id === dateEl.id ? {\n          ...el,\n          date: formatDate,\n          distance: Number(distance),\n        } : el\n      ));\n\n      setData(updatedData);\n    }\n\n    setForm(INITIAL_FORM_STATE);\n  };\n\n  const onChange = ({ target }) => {\n    setForm((prev) => ({ ...prev, [target.name]: target.value }));\n  };\n\n  const onDelete = (id) => {\n    setData(() => stepsData.filter((el) => el.id !== id));\n    setForm(INITIAL_FORM_STATE);\n  };\n\n  const onEdit = (id) => {\n    const result = stepsData.find((el) => el.id === id);\n    setForm({\n      date: result.date.toLocaleDateString(),\n      distance: result.distance,\n      edit: true,\n    });\n    setEditId(id);\n  };\n\n  return (\n    <div className=\"StepsManager\">\n      <StepsForm\n        form={form}\n        onSubmit={onSubmit}\n        onChange={onChange}\n      />\n      <StepsTable\n        stepsData={stepsData}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    </div>\n  );\n}\n\nexport default StepsManager;\n","import React from 'react';\nimport './App.css';\nimport StepsManager from './components/StepsManager';\n\nfunction App() {\n  return <StepsManager />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}